// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 *
 * Funciona de manera identica a la RAM64 y RAM512, pasando a cada una
 * de las RAM512 los 9 bits mas a la derecha para seleccionar el registro/RAM interna.
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=cr0, b=cr1, c=cr2, d=cr3, e=cr4, f=cr5, g=cr6, h=cr7);
    RAM512(in=in, load=cr0, address= address[0..8], out=sr0);
    RAM512(in=in, load=cr1, address= address[0..8], out=sr1);
    RAM512(in=in, load=cr2, address= address[0..8], out=sr2);
    RAM512(in=in, load=cr3, address= address[0..8], out=sr3);
    RAM512(in=in, load=cr4, address= address[0..8], out=sr4);
    RAM512(in=in, load=cr5, address= address[0..8], out=sr5);
    RAM512(in=in, load=cr6, address= address[0..8], out=sr6);
    RAM512(in=in, load=cr7, address= address[0..8], out=sr7);
    Mux8Way16(a=sr0, b=sr1, c=sr2, d=sr3, e=sr4, f=sr5, g=sr6, h=sr7, sel=address[9..11], out=out);
}