// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 *
 * Funciona de manera identica a la RAM64, RAM512, y RAM4K usando solo 4 sub unidades internas
 * pasando a cada una de las RAM4K los 12 bits mas a la derecha para seleccionar el registro/RAM interna.
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[12..13], a=cr0, b=cr1, c=cr2, d=cr3);
    RAM4K(in=in, load=cr0, address= address[0..11], out=sr0);
    RAM4K(in=in, load=cr1, address= address[0..11], out=sr1);
    RAM4K(in=in, load=cr2, address= address[0..11], out=sr2);
    RAM4K(in=in, load=cr3, address= address[0..11], out=sr3);   
    Mux4Way16(a=sr0, b=sr1, c=sr2, d=sr3, sel=address[12..13], out=out);
}